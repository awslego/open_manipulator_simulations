<launch>
 <!-- These are the arguments you can pass this launch file, for example paused:=true -->
 <arg name="use_robot_name" default="open_manipulator"
      doc="Must match the robotNamespace tag in the gazebo description file"/>
 <arg name="paused" default="true"/>
 <arg name="use_sim_time" default="true"/>
 <arg name="gui" default="true"/>
 <arg name="headless" default="false"/>
 <arg name="debug" default="false"/>
 
 <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
 <include file="$(find gazebo_ros)/launch/empty_world.launch">
   <arg name="world_name" value="$(find open_manipulator_gazebo)/worlds/empty.world"/>
   <arg name="debug" value="$(arg debug)" />
   <arg name="gui" value="$(arg gui)" />
   <arg name="paused" value="$(arg paused)"/>
   <arg name="use_sim_time" value="$(arg use_sim_time)"/>
   <arg name="headless" value="$(arg headless)"/>
 </include>
 
 <group ns="open_manipulator">
   <!-- Load the URDF into the ROS Parameter Server -->
   <param name="robot_description"
   command="$(find xacro)/xacro --inorder '$(find open_manipulator_description)/urdf/open_manipulator.urdf.xacro'"/>
 
   <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
   <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
     args="-urdf -model open_manipulator -x 0.25 -z 0.0 -param robot_description"/>
 
   <!-- ros_control robotis manipulator launch file -->
   <include file="$(find open_manipulator_gazebo)/launch/open_manipulator_controller_multi.launch">
     <arg name="use_robot_name" value="open_manipulator"/>
   </include>
 </group>
 
 <group ns="robot1_controller">
   <!-- Load the URDF into the ROS Parameter Server -->
   <param name="robot_description"
   command="$(find xacro)/xacro --inorder '$(find open_manipulator_description)/urdf/robot1_controller.urdf.xacro'"/>
 
   <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
   <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
     args="-urdf -model robot1_controller -y 0.5 -z 0.0 -param robot_description"/>
 
   <!-- ros_control robotis manipulator launch file -->
   <include file="$(find open_manipulator_gazebo)/launch/open_manipulator_controller_multi.launch">
     <arg name="use_robot_name" value="robot1_controller"/>
   </include>
 </group>

 <group ns="robot2_controller">
   <!-- Load the URDF into the ROS Parameter Server -->
   <param name="robot_description"
   command="$(find xacro)/xacro --inorder '$(find open_manipulator_description)/urdf/robot2_controller.urdf.xacro'"/>
 
   <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
   <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
     args="-urdf -model robot2_controller -x 0.5 -y 0.5 -z 0.0 -param robot_description"/>
 
   <!-- ros_control robotis manipulator launch file -->
   <include file="$(find open_manipulator_gazebo)/launch/open_manipulator_controller_multi.launch">
     <arg name="use_robot_name" value="robot2_controller"/>
   </include>
 </group>

</launch>
